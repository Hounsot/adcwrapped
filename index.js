require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const PortfolioParser = require('./portfolioParser');
const ImageGenerator = require('./imageGenerator');
const fs = require('fs');
const path = require('path');

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });
const parser = new PortfolioParser();
const imageGenerator = new ImageGenerator();



// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const user = msg.from;
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    let greeting = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å";
    if (user.first_name) {
        greeting = `–ü—Ä–∏–≤–µ—Ç, ${user.first_name}!`;
    } else if (user.username) {
        greeting = `–ü—Ä–∏–≤–µ—Ç, @${user.username}!`;
    }
    
    const welcomeMessage = `
üéì ${greeting}

–≠—Ç–æ—Ç –±–æ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–±–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–≤–æ–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è –≤ –í–®–≠.

üîó –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–≤–æ–µ —Å—Ç–∞—Ä–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –í–®–≠:

–ü—Ä–∏–º–µ—Ä: https://portfolio.hse.ru/Student/17647

–£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞ –≤—ã–≥–ª—è–¥–∏—Ç –∏–º–µ–Ω–Ω–æ —Ç–∞–∫!
    `;
    
    // –ü—É—Ç—å –∫ GIF —Ñ–∞–π–ª—É
    const gifPath = path.join(__dirname, 'assets', 'images', 'welcome.gif');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        if (fs.existsSync(gifPath)) {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GIF —Å –ø–æ–¥–ø–∏—Å—å—é
            await bot.sendAnimation(chatId, fs.createReadStream(gifPath), {
                caption: welcomeMessage,
                filename: 'welcome.gif',
                contentType: 'image/gif'
            });
        } else {
            // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            console.log('GIF —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
            bot.sendMessage(chatId, welcomeMessage);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ GIF:', error);
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.sendMessage(chatId, welcomeMessage);
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;
    
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    if (text && text.startsWith('/')) {
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –í–®–≠
    const portfolioUrlRegex = /https?:\/\/portfolio\.hse\.ru\/Student\/\d+/i;
    
    if (!portfolioUrlRegex.test(text)) {
        bot.sendMessage(chatId, `
‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏!

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
https://portfolio.hse.ru/Student/XXXXX

–ì–¥–µ XXXXX - —ç—Ç–æ –≤–∞—à ID —Å—Ç—É–¥–µ–Ω—Ç–∞.
        `);
        return;
    }
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞
    const processingMsg = await bot.sendMessage(chatId, `
‚è≥ –ù–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ...

–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ!
    `);
    
    try {
        // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
        console.log(`–ù–∞—á–∏–Ω–∞—é –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ: ${text}`);
        const studentData = await parser.parseStudentData(text);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        try {
            await bot.editMessageText(`
‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!

–°–æ–∑–¥–∞—é –∫—Ä–∞—Å–∏–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...
            `, {
                chat_id: chatId,
                message_id: processingMsg.message_id
            });
        } catch (editError) {
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:', editError.message);
        }
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        let images = [];
        try {
            images = await imageGenerator.generateStudentStats(studentData);
        } catch (imageError) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', imageError);
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É, –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å
            await bot.sendMessage(chatId, '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –Ω–æ –≤–æ—Ç –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
        }
        
        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        try {
            await bot.deleteMessage(chatId, processingMsg.message_id);
        } catch (deleteError) {
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:', deleteError.message);
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥—Ä—É–ø–ø–æ–π (media group)
        if (images.length > 0) {
            const mediaGroup = images.map((imagePath, index) => ({
                type: 'photo',
                media: fs.createReadStream(imagePath),
                caption: index === 0 ? 'üéì –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ HSE Portfolio Wrapped' : undefined
            }));
            
            try {
                await bot.sendMediaGroup(chatId, mediaGroup);
            } catch (mediaError) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ media group:', mediaError);
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–∞–∫ fallback
                for (const imagePath of images) {
                    try {
                        await bot.sendPhoto(chatId, fs.createReadStream(imagePath), {
                            filename: path.basename(imagePath),
                            contentType: 'image/png'
                        });
                    } catch (photoError) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ:', photoError);
                    }
                }
            }
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–∫ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
        const statsMessage = formatStudentStats(studentData);
        await bot.sendMessage(chatId, `üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n${statsMessage}`, { parse_mode: 'HTML' });
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ:', error);
        
        try {
            await bot.editMessageText(`
‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ!

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é
‚Ä¢ –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ!
            `, {
                chat_id: chatId,
                message_id: processingMsg.message_id
            });
        } catch (editError) {
            // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.sendMessage(chatId, `
‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ!

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é
‚Ä¢ –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ!
            `);
        }
    }
});

// –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function formatStudentStats(data) {
    const stats = data.statistics;
    
    let message = `
üéì <b>${data.studentName}</b>

üìä <b>–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–†–¢–§–û–õ–ò–û</b>

üóÇÔ∏è <b>–ü—Ä–æ–µ–∫—Ç—ã:</b> ${stats.totalProjects}
üé® <b>–ù–∞ HseDesign:</b> ${stats.projectsWithHseDesign}
‚≠ê <b>–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞:</b> ${stats.averageMark.toFixed(1)}
üìà <b>–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥:</b> ${stats.averageRating.toFixed(1)}
‚ù§Ô∏è <b>–û–±—â–∏–µ –ª–∞–π–∫–∏:</b> ${stats.totalLikes}

ü§ù <b>–ì—Ä—É–ø–ø–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã:</b> ${stats.teamProjects}
${stats.teammatesList ? `üë• <b>–°–æ–∞–≤—Ç–æ—Ä—ã:</b> ${stats.teammatesList}` : ''}

üèÜ <b>–õ–£–ß–®–ò–ô –ü–†–û–ï–ö–¢</b>
${stats.bestProject.title}
–û—Ü–µ–Ω–∫–∞: ${stats.bestProject.totalMark} | –†–µ–π—Ç–∏–Ω–≥: ${stats.bestProject.rating}
`;

    if (stats.mostLikedProject && stats.mostLikedProject.hseDesignLikes > 0) {
        message += `
üî• <b>–°–ê–ú–´–ô –ü–û–ü–£–õ–Ø–†–ù–´–ô</b>
${stats.mostLikedProject.title}
‚ù§Ô∏è ${stats.mostLikedProject.hseDesignLikes} –ª–∞–π–∫–æ–≤
`;
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –æ—Ü–µ–Ω–∫–∞–º
    message += `
üìä <b>–†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –û–¶–ï–ù–û–ö</b>
`;
    
    Object.entries(stats.markDistribution)
        .sort(([a], [b]) => parseInt(b) - parseInt(a))
        .forEach(([grade, count]) => {
            const percentage = ((count / stats.totalProjects) * 100).toFixed(1);
            message += `${grade} –±–∞–ª–ª–æ–≤: ${count} (${percentage}%)\n`;
        });

    return message;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', (error) => {
    console.error('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
});

bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error);
});

console.log('ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
console.log('–û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏–π...'); 